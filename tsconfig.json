{
  "compilerOptions": {
    "sourceMap": true,
    "target": "es6",
    "baseUrl": "./",
    "paths": {
      "src/*": ["src/*"],
      "@atoms/*": ["src/components/atoms/*"],
      "@molecules/*": ["src/components/molecules/*"],
      "@organisms/*": ["src/components/organisms/*"],
      "@templates/*": ["src/components/templates/*"],
      "@pages/*": ["src/pages/*"],
      "@styles/*": ["src/styles/*"],
      "@fonts/*": ["src/assets/fonts/*"],
      "@images/*": ["src/assets/images/*"]
    },
    "lib": ["dom", "dom.iterable", "esnext"],
    "jsx": "react-jsx",
    "module": "commonjs", //TypeScript 모듈 코드를 commonjs 모듈 형식으로 생성
    "strict": false, //엄격한 TypeScript 체크
    "noEmit": true, //TypeScript 컴파일러가 JavaScript 파일을 생성하지 않도록 설정합니다. (컴파일만 수행하고 결과를 생성하지 않음)
    "allowJs": true, //JavaScript 파일을 TypeScript 프로젝트에서 허용
    "checkJs": true, //일반 js 파일에서도 에러체크 여부
    "skipLibCheck": true, //라이브러리 파일의 타입 체크를 건너뛸 것
    "noImplicitAny": false, //any라는 타입이 의도치않게 발생할 경우 에러
    "noEmitOnError": true, //.ts파일에 에러가 있으면 .js파일을 생성하지 않는다
    "removeComments": true, //컴파일 시 주석이 제거
    "esModuleInterop": true, //CommonJS 모듈 형식과 ES6 모듈 형식 간의 상호 운용성을 활성화
    "isolatedModules": true, //각 파일을 개별 모듈로 컴파일
    "strictNullChecks": true, //null, undefined 타입에 이상한 조작하면 에러
    "moduleResolution": "node", //모듈 해결 전략을 Node.js 스타일로 설정
    "resolveJsonModule": true, //JSON 파일을 모듈로 가져올 수 있도록 설정
    "noFallthroughCasesInSwitch": true, //switch 문에서 case 라벨 사이의 폴스루를 방지
    "allowSyntheticDefaultImports": true, //모듈을 가져올 때 import x from 'y' 형태의 문법을 허용
    "forceConsistentCasingInFileNames": false //파일 이름에서 대소문자 구분
  },
  "include": ["src", "**/*.ts", "**/*.tsx"],
  "exclude": ["node_modules", "dist"]
}
